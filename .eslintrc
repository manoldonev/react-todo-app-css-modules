{
    "env": {
        "browser": true, // Browser global variables like `window` etc.
        "commonjs": true, // CommonJS global variables and CommonJS scoping.Allows require, exports and module.
        "es6": true, // Enable all ECMAScript 6 features except for modules.
        "jest": true, // Jest global variables like `it` etc.
        "node": true // Defines things like process.env when generating through node
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "plugin:jest/recommended",
        "plugin:testing-library/react",
        "plugin:jsx-a11y/recommended",
        "plugin:import/recommended"
    ],
    "parser": "babel-eslint", // Uses babel-eslint transforms.
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2021, // Allows for the parsing of modern ECMAScript features
        "sourceType": "module" // Allows for the use of imports
    },
    "plugins": [
        "react",
        "react-hooks",
        "jest",
        "testing-library",
        "jsx-a11y",
        "import"
    ],
    "root": true, // For configuration cascading.
    "rules": {
        "react/react-in-jsx-scope": "off",
        "import/no-named-as-default": "off",
        "import/order": [
            "warn",
            {
                "groups": [
                    "builtin",
                    "external",
                    "internal",
                    "parent",
                    "sibling",
                    "index"
                ]
            }
        ],
        "testing-library/no-manual-cleanup": "error",
        "testing-library/no-render-in-setup": "error",
        "testing-library/no-unnecessary-act": "error",
        "testing-library/no-wait-for-multiple-assertions": "error",
        "testing-library/no-wait-for-side-effects": "error",
        "testing-library/no-wait-for-snapshot": "error",
        "testing-library/prefer-explicit-assert": "error",
        "testing-library/prefer-presence-queries": "error",
        "testing-library/prefer-query-by-disappearance": "error",
        "testing-library/prefer-user-event": "error",
        "testing-library/prefer-wait-for": "error"
    },
    "settings": {
        "react": {
            "version": "detect" // Detect react version
        }
    }
}