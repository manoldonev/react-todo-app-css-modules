{"version":3,"sources":["components/TodoList/ActionList/ActionList.module.scss","components/TodoList/TodoItem/TodoItem.module.scss","components/TodoList/Filter/Filter.module.scss","components/TodoList/Footer/Footer.module.scss","components/TodoList/TodoList.module.scss","components/TodoList/InputBox/InputBox.module.scss","components/TodoList/SearchBox/SearchBox.module.scss","components/TodoList/Header/Header.module.scss","components/TodoList/Info/Info.module.scss","services/filter.js","services/mode.js","context/todo.jsx","services/todo.js","components/TodoList/TodoItem/TodoItem.jsx","components/TodoList/InputBox/InputBox.jsx","components/TodoList/SearchBox/SearchBox.jsx","components/TodoList/InputToggle/InputToggle.jsx","components/TodoList/Header/Header.jsx","components/TodoList/ActionList/ActionList.jsx","components/TodoList/Filter/Filter.jsx","components/TodoList/Footer/Footer.jsx","components/TodoList/Info/Info.jsx","hooks/useKeyboardShortcut.js","components/TodoList/TodoList.jsx","components/TodoList/useTodoKeyboardShortcuts.js","components/App/App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","filterOptions","all","active","done","inputModes","none","search","add","TodoStateContext","React","createContext","TodoDispatchContext","actionTypes","todoReducer","state","action","type","itemText","value","Error","nextId","items","length","toString","produce","draft","push","id","text","query","itemId","itemToToggle","find","item","filterValue","filter","inputMode","mode","TodoProvider","children","reducer","useReducer","dispatch","Provider","useTodoState","context","useContext","useTodoDispatch","TodoItem","props","data","cssClass","cn","styles","TodoItem____done","className","TodoItem__content","htmlFor","checkbox","checked","onChange","InputBox","useState","setValue","placeholder","e","target","onKeyUp","keyCode","KEY_RETURN","trim","SearchBox","InputToggle","Header","ActionList","handleClick","ActionList__item","onClick","ImageButton____add","ImageButton____selected","ImageButton____search","Filter","computeCssClass","key","LinkButton","LinkButton____selected","Object","entries","map","Filter__item","toggleFilter","Footer","count","Footer__counter","Footer__content","Info","message","blacklistedTargets","ACTION_KEYDOWN","ACTION_KEYUP","ACTION_RESET","keysReducer","useKeyboardShortcut","shortcutKeys","callback","Array","isArray","lowerCaseKeys","toLowerCase","initialKeyMapping","reduce","keys","currentKey","setKeys","handleKeydown","useCallback","keydownEvent","repeat","lowerCaseKey","includes","tagName","handleKeyup","keyupEvent","useEffect","values","every","window","addEventListener","removeEventListener","TodoList","listContent","filteredItems","filterMode","applyFilter","queryString","createModeKeys","VALUE_SHIFT","VALUE_A","searchModeKeys","VALUE_S","noInputModeKeys","VALUE_ESCAPE","useTodoKeyboardShortcuts","TodoList__info","TodoList__content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85f0c46f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActionList\":\"ActionList_ActionList__1FRvH\",\"ActionList__item\":\"ActionList_ActionList__item__2mjQb\",\"ImageButton\":\"ActionList_ImageButton__LEdPW\",\"ImageButton____add\":\"ActionList_ImageButton____add__2lAqN\",\"ImageButton____search\":\"ActionList_ImageButton____search__2qHKG\",\"ImageButton____selected\":\"ActionList_ImageButton____selected__1Y1aI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__Qnlg8\",\"TodoItem____done\":\"TodoItem_TodoItem____done__1k6V5\",\"TodoItem__content\":\"TodoItem_TodoItem__content__3fdje\",\"checkbox\":\"TodoItem_checkbox__3qgxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__3fpZt\",\"Filter__item\":\"Filter_Filter__item__LVm3l\",\"LinkButton\":\"Filter_LinkButton__X_4jP\",\"LinkButton____selected\":\"Filter_LinkButton____selected__4fAqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__3WXMg\",\"Footer__counter\":\"Footer_Footer__counter__Of6Ic\",\"Footer__content\":\"Footer_Footer__content__3dneO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoList_TodoList__3hnL-\",\"TodoList__content\":\"TodoList_TodoList__content__3Kbs5\",\"TodoList__info\":\"TodoList_TodoList__info__1xEN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputBox\":\"InputBox_InputBox__B-Ft7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputBox\":\"SearchBox_InputBox__37P4e\",\"SearchBox\":\"SearchBox_SearchBox__3Dqim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__39x9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"Info_Info__3ha2y\"};","export const filterOptions = {\n  all: 'all',\n  active: 'active',\n  done: 'done',\n};\n\nexport function filter(items, filterMode) {\n  if (filterMode === filterOptions.done) {\n    return items.filter((item) => item.done);\n  }\n\n  if (filterMode === filterOptions.active) {\n    return items.filter((item) => !item.done);\n  }\n\n  return [...items];\n}\n\nexport function search(items, query) {\n  const queryString = query.toLowerCase();\n  if (query == null) {\n    return [...items];\n  }\n\n  return items.filter((item) => item.text.toLowerCase().includes(queryString));\n}\n","const inputModes = {\n  none: 'none',\n  search: 'search',\n  add: 'add',\n};\n\nexport default inputModes;\n","import React, { useReducer } from 'react';\nimport produce from 'immer';\nimport PropTypes from 'prop-types';\nimport { getAll, createNew } from '../services/todo';\nimport { filterOptions } from '../services/filter';\nimport inputModes from '../services/mode';\n\nconst TodoStateContext = React.createContext();\nconst TodoDispatchContext = React.createContext();\n\nconst actionTypes = {\n  addItem: 'ADD_ITEM',\n  searchItem: 'SEARCH_ITEM',\n  toggleItem: 'TOGGLE_ITEM',\n  toggleFilter: 'TOGGLE_FILTER',\n  toggleMode: 'TOGGLE_MODE',\n};\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.addItem: {\n      const itemText = action.value;\n      if (itemText == null) {\n        throw new Error(`${action.type}: item text not specified`);\n      }\n\n      const nextId = (state.items.length + 1).toString();\n      return produce(state, (draft) => {\n        draft.items.push(createNew({ id: nextId, text: itemText }));\n      });\n    }\n    case actionTypes.searchItem: {\n      return produce(state, (draft) => {\n        draft.query = action.value;\n      });\n    }\n    case actionTypes.toggleItem: {\n      const itemId = action.value;\n      if (itemId == null) {\n        throw new Error(`${action.type}: item id not specified`);\n      }\n\n      return produce(state, (draft) => {\n        const itemToToggle = draft.items.find((item) => item.id === itemId);\n        if (itemToToggle == null) {\n          throw new Error(`${action.type}: item with id ${itemId} not found`);\n        }\n        itemToToggle.done = !itemToToggle.done;\n      });\n    }\n    case actionTypes.toggleFilter: {\n      const filterValue = action.value;\n      if (!(filterValue in filterOptions)) {\n        throw new Error(`${action.type}: filter ${filterValue} not found`);\n      }\n\n      return produce(state, (draft) => {\n        draft.filter = filterValue;\n      });\n    }\n    case actionTypes.toggleMode: {\n      const inputMode = action.value;\n      if (!(inputMode in inputModes)) {\n        throw new Error(`${action.type}: input mode ${inputMode} not recognized`);\n      }\n\n      return produce(state, (draft) => {\n        if (draft.mode !== inputMode) {\n          draft.mode = inputMode;\n          draft.query = '';\n          draft.filter = filterOptions.all;\n        }\n      });\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction TodoProvider({ children, reducer = todoReducer } = {}) {\n  const items = getAll();\n  const [state, dispatch] = useReducer(reducer, { items, mode: inputModes.add, filter: filterOptions.all, query: '' });\n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>{children}</TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nTodoProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n  reducer: PropTypes.func,\n};\n\nfunction useTodoState() {\n  const context = React.useContext(TodoStateContext);\n  if (context == null) {\n    throw new Error(`useTodoState must be within a TodoProvider`);\n  }\n\n  return context;\n}\n\nfunction useTodoDispatch() {\n  const context = React.useContext(TodoDispatchContext);\n  if (context == null) {\n    throw new Error(`useTodoDispatch must be within a TodoProvider`);\n  }\n\n  return context;\n}\n\nexport { TodoProvider, useTodoState, useTodoDispatch, todoReducer, actionTypes };\n","export function getAll() {\n  return [\n    {\n      id: '1',\n      text: 'Learn JavaScript',\n      done: true,\n    },\n    {\n      id: '2',\n      text: 'Learn React',\n      done: false,\n    },\n    {\n      id: '3',\n      text: 'Build a React app',\n      done: false,\n    },\n  ];\n}\n\nexport function createNew({ id, text }) {\n  return { id, text, done: false };\n}\n","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useTodoDispatch, actionTypes } from '../../../context/todo';\n\nimport styles from './TodoItem.module.scss';\n\nfunction TodoItem(props) {\n  const { data } = props;\n  const dispatch = useTodoDispatch();\n  const cssClass = cn(styles.TodoItem, { [styles.TodoItem____done]: data.done });\n\n  function handleChange() {\n    dispatch({ type: actionTypes.toggleItem, value: data.id });\n  }\n\n  return (\n    <li className={cssClass}>\n      <div className={styles.TodoItem__content}>\n        <label htmlFor={data.id}>\n          <input type=\"checkbox\" id={data.id} className={styles.checkbox} checked={data.done} onChange={handleChange} />\n          {data.text}\n        </label>\n      </div>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    done: PropTypes.bool.isRequired,\n  }),\n};\n\nexport default TodoItem;\n","import { KEY_RETURN } from 'keycode-js';\nimport { useState } from 'react';\nimport { useTodoDispatch, actionTypes } from '../../../context/todo';\n\nimport styles from './InputBox.module.scss';\n\nexport default function InputBox() {\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n\n  function handleKeyUp(e) {\n    if (e.keyCode === KEY_RETURN) {\n      dispatch({ type: actionTypes.addItem, value: value.trim() });\n      setValue('');\n    }\n  }\n\n  return (\n    <input\n      type=\"text\"\n      className={styles.InputBox}\n      placeholder=\"Add New\"\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      onKeyUp={handleKeyUp}\n    />\n  );\n}\n","import { useTodoDispatch, useTodoState, actionTypes } from '../../../context/todo';\n\nimport styles from './SearchBox.module.scss';\n\nexport default function SearchBox() {\n  const { query } = useTodoState();\n  const dispatch = useTodoDispatch();\n\n  function handleChange(e) {\n    const { value } = e.target;\n    dispatch({ type: actionTypes.searchItem, value });\n  }\n\n  return <input type=\"text\" className={styles.SearchBox} placeholder=\"Search\" value={query} onChange={handleChange} />;\n}\n","import PropTypes from 'prop-types';\nimport InputBox from '../InputBox';\nimport SearchBox from '../SearchBox';\nimport inputModes from '../../../services/mode';\n\nfunction InputToggle(props) {\n  const { mode, query } = props;\n  if (mode === inputModes.add) {\n    return <InputBox />;\n  }\n\n  if (mode === inputModes.search) {\n    return <SearchBox query={query} />;\n  }\n\n  return null;\n}\n\nInputToggle.propTypes = {\n  mode: PropTypes.oneOf(Object.values(inputModes)).isRequired,\n  query: PropTypes.string,\n};\n\nexport default InputToggle;\n","import styles from './Header.module.scss';\n\nexport default function Header() {\n  return <h1 className={styles.Header}>Things to do</h1>;\n}\n","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useTodoDispatch, actionTypes } from '../../../context/todo';\nimport inputModes from '../../../services/mode';\n\nimport styles from './ActionList.module.scss';\n\nfunction ActionList(props) {\n  const { mode } = props;\n  const dispatch = useTodoDispatch();\n  function handleClick(e) {\n    dispatch({ type: actionTypes.toggleMode, value: e.target.value });\n  }\n\n  return (\n    <ul className={styles.ActionList}>\n      <li className={styles.ActionList__item}>\n        <button\n          type=\"button\"\n          aria-label=\"Create Mode\"\n          value={inputModes.add}\n          onClick={handleClick}\n          className={cn(styles.ImageButton____add, { [styles.ImageButton____selected]: mode === inputModes.add })}\n          data-testid=\"action-add\"\n        />\n      </li>\n      <li className={styles.ActionList__item}>\n        <button\n          type=\"button\"\n          aria-label=\"Search Mode\"\n          value={inputModes.search}\n          onClick={handleClick}\n          className={cn(styles.ImageButton____search, { [styles.ImageButton____selected]: mode === inputModes.search })}\n          data-testid=\"action-search\"\n        />\n      </li>\n    </ul>\n  );\n}\n\nActionList.propTypes = {\n  mode: PropTypes.oneOf(Object.values(inputModes)).isRequired,\n};\n\nexport default ActionList;\n","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useTodoDispatch, actionTypes } from '../../../context/todo';\nimport { filterOptions } from '../../../services/filter';\n\nimport styles from './Filter.module.scss';\n\nfunction Filter(props) {\n  const { filter } = props;\n  const dispatch = useTodoDispatch();\n\n  function computeCssClass(key) {\n    return cn(styles.LinkButton, { [styles.LinkButton____selected]: key === filter });\n  }\n\n  function toggleFilter(key) {\n    dispatch({ type: actionTypes.toggleFilter, value: key });\n  }\n\n  return (\n    <ul className={styles.Filter}>\n      {Object.entries(filterOptions).map(([key, value]) => (\n        <li className={styles.Filter__item} key={key}>\n          <button type=\"button\" className={computeCssClass(key)} onClick={() => toggleFilter(key)}>\n            {value}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { filterOptions } from '../../../services/filter';\nimport inputModes from '../../../services/mode';\nimport ActionList from '../ActionList';\nimport Filter from '../Filter';\n\nimport styles from './Footer.module.scss';\n\nfunction Footer(props) {\n  const { count, filter, mode } = props;\n\n  return (\n    <div className={styles.Footer}>\n      <ActionList mode={mode} />\n      <span className={styles.Footer__counter} data-testid=\"counter\">\n        <span className={styles.Footer__content}>{count}</span>\n        {' items left'}\n      </span>\n      <Filter filter={filter} />\n    </div>\n  );\n}\n\nFooter.propTypes = {\n  count: PropTypes.number.isRequired,\n  filter: PropTypes.oneOf(Object.values(filterOptions)).isRequired,\n  mode: PropTypes.oneOf(Object.values(inputModes)).isRequired,\n};\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport inputModes from '../../../services/mode';\n\nimport styles from './Info.module.scss';\n\nconst INFO_SHORTCUT_KEYS = 'Press `Shift + S` to search and `Shift + A` to create a new item.';\nconst INFO_CANCEL_SHORTCUT_KEY = 'Press `Esc` to cancel.';\n\nfunction Info(props) {\n  const { mode } = props;\n  const message = mode === inputModes.none ? INFO_SHORTCUT_KEYS : INFO_CANCEL_SHORTCUT_KEY;\n\n  return <p className={styles.Info}>{message}</p>;\n}\n\nInfo.propTypes = {\n  mode: PropTypes.oneOf(Object.values(inputModes)).isRequired,\n};\n\nexport default Info;\n","import produce from 'immer';\nimport { useCallback, useEffect, useReducer } from 'react';\n\nconst blacklistedTargets = ['input', 'textarea'];\nconst ACTION_KEYDOWN = 'key-down';\nconst ACTION_KEYUP = 'key-up';\nconst ACTION_RESET = 'reset';\n\nfunction useKeyboardShortcut(shortcutKeys, callback) {\n  if (!Array.isArray(shortcutKeys)) {\n    throw new Error(\n      'The first parameter to `useKeyboardShortcut` must be an ordered array of `KeyboardEvent.key` strings.',\n    );\n  }\n\n  if (!shortcutKeys.length) {\n    throw new Error(\n      'The first parameter to `useKeyboardShortcut` must contain at least one `KeyboardEvent.key` string.',\n    );\n  }\n\n  if (!callback || typeof callback !== 'function') {\n    throw new Error(\n      'The second parameter to `useKeyboardShortcut` must be a function that will be invoked when the keys are pressed.',\n    );\n  }\n\n  const lowerCaseKeys = shortcutKeys.map((key) => key.toLowerCase());\n  const initialKeyMapping = lowerCaseKeys.reduce((keys, currentKey) => {\n    keys[currentKey] = false;\n    return keys;\n  }, {});\n\n  const [keys, setKeys] = useReducer(keysReducer, initialKeyMapping);\n\n  const handleKeydown = useCallback(\n    (keydownEvent) => {\n      const { key, target, repeat } = keydownEvent;\n      const lowerCaseKey = key.toLowerCase();\n\n      if (\n        repeat ||\n        blacklistedTargets.includes(target.tagName.toLowerCase()) ||\n        !lowerCaseKeys.includes(lowerCaseKey)\n      ) {\n        return;\n      }\n\n      if (!keys[lowerCaseKey]) {\n        setKeys({ type: ACTION_KEYDOWN, key: lowerCaseKey });\n      }\n    },\n    [keys, lowerCaseKeys],\n  );\n\n  const handleKeyup = useCallback(\n    (keyupEvent) => {\n      const { key, target } = keyupEvent;\n      const lowerCaseKey = key.toLowerCase();\n\n      if (blacklistedTargets.includes(target.tagName.toLowerCase()) || !lowerCaseKeys.includes(lowerCaseKey)) {\n        return;\n      }\n\n      if (keys[lowerCaseKey]) {\n        setKeys({ type: ACTION_KEYUP, key: lowerCaseKey });\n      }\n    },\n    [keys, lowerCaseKeys],\n  );\n\n  useEffect(() => {\n    if (Object.values(keys).every((value) => value)) {\n      callback(keys);\n      setKeys({ type: ACTION_RESET, data: initialKeyMapping });\n    }\n  }, [callback, keys, initialKeyMapping]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown, true);\n    return () => window.removeEventListener('keydown', handleKeydown, true);\n  }, [handleKeydown]);\n\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyup, true);\n    return () => window.removeEventListener('keyup', handleKeyup, true);\n  }, [handleKeyup]);\n\n  return null;\n}\n\nfunction keysReducer(state, action) {\n  switch (action.type) {\n    case ACTION_KEYDOWN: {\n      return produce(state, (draft) => {\n        draft[action.key] = true;\n      });\n    }\n    case ACTION_KEYUP: {\n      return produce(state, (draft) => {\n        draft[action.key] = false;\n      });\n    }\n    case ACTION_RESET: {\n      return { ...action.data };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default useKeyboardShortcut;\n","import { useTodoState } from '../../context/todo';\nimport { filter as applyFilter, search } from '../../services/filter';\nimport TodoItem from './TodoItem';\nimport InputToggle from './InputToggle';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Info from './Info';\nimport useTodoKeyboardShortcuts from './useTodoKeyboardShortcuts';\n\nimport styles from './TodoList.module.scss';\n\nexport default function TodoList() {\n  const { items, mode, filter, query } = useTodoState();\n  const filteredItems = applyFilter(search(items, query), filter);\n  const count = filteredItems.length;\n\n  useTodoKeyboardShortcuts();\n\n  let listContent;\n  if (filteredItems.length === 0) {\n    listContent = <p className={styles.TodoList__info}>There are no items.</p>;\n  } else {\n    listContent = (\n      <ul className={styles.TodoList__content} data-testid=\"todo-list\">\n        {filteredItems.map((item) => (\n          <TodoItem key={item.id} data={item} />\n        ))}\n      </ul>\n    );\n  }\n\n  return (\n    <section className={styles.TodoList}>\n      <>\n        <Header />\n        <InputToggle mode={mode} query={query} />\n\n        {listContent}\n\n        <Footer count={count} filter={filter} mode={mode} />\n      </>\n      <Info mode={mode} />\n    </section>\n  );\n}\n","import { VALUE_A, VALUE_S, VALUE_ESCAPE, VALUE_SHIFT } from 'keycode-js';\nimport { useTodoDispatch, actionTypes } from '../../context/todo';\nimport inputModes from '../../services/mode';\nimport useKeyboardShortcut from '../../hooks/useKeyboardShortcut';\n\nexport default function useTodoKeyboardShortcuts() {\n  const dispatch = useTodoDispatch();\n  const createModeKeys = [VALUE_SHIFT, VALUE_A];\n  const searchModeKeys = [VALUE_SHIFT, VALUE_S];\n  const noInputModeKeys = [VALUE_ESCAPE];\n\n  useKeyboardShortcut(createModeKeys, () => dispatch({ type: actionTypes.toggleMode, value: inputModes.add }));\n  useKeyboardShortcut(searchModeKeys, () => dispatch({ type: actionTypes.toggleMode, value: inputModes.search }));\n  useKeyboardShortcut(noInputModeKeys, () => dispatch({ type: actionTypes.toggleMode, value: inputModes.none }));\n}\n","import { TodoProvider } from '../../context/todo';\nimport TodoList from '../TodoList';\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <TodoList />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}