{"version":3,"sources":["components/TodoList/ActionList/ActionList.module.scss","components/TodoList/TodoItem/TodoItem.module.scss","components/TodoList/Filter/Filter.module.scss","components/TodoList/Footer/Footer.module.scss","components/TodoList/TodoList.module.scss","components/TodoList/InputBox/InputBox.module.scss","components/TodoList/SearchBox/SearchBox.module.scss","components/TodoList/Header/Header.module.scss","components/TodoList/Info/Info.module.scss","services/filter.js","services/mode.js","context/todo.js","services/todo.js","components/TodoList/TodoItem/TodoItem.js","components/TodoList/InputBox/InputBox.js","components/TodoList/SearchBox/SearchBox.js","components/TodoList/InputToggle/InputToggle.js","components/TodoList/Header/Header.js","components/TodoList/ActionList/ActionList.js","components/TodoList/Filter/Filter.js","components/TodoList/Footer/Footer.js","components/TodoList/Info/Info.js","hooks/useKeyboardShortcut.js","components/TodoList/TodoList.js","components/TodoList/useTodoKeyboardShortcuts.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","FILTER_ALL","FILTER_ACTIVE","FILTER_DONE","getOptions","MODE_NONE","MODE_SEARCH","MODE_ADD","TodoStateContext","React","createContext","TodoDispatchContext","filterOptions","getFilterOptions","inputModes","ADD_ITEM","SEARCH_ITEM","TOGGLE_ITEM","TOGGLE_FILTER","TOGGLE_MODE","todoReducer","state","action","type","itemText","value","Error","nextId","items","length","toString","produce","draft","push","id","text","done","queryString","query","itemId","itemToToggle","find","item","filterValue","filter","mode","includes","TodoProvider","children","useReducer","dispatch","Provider","useTodoState","context","useContext","useTodoDispatch","TodoItem","props","data","cssClass","cn","styles","TodoItem____done","className","TodoItem__content","checkbox","checked","onChange","InputBox","useState","setValue","placeholder","e","target","onKeyUp","keyCode","KEY_RETURN","trim","SearchBox","InputToggle","Header","ActionList","handleClick","ActionList__item","onClick","ImageButton____add","ImageButton____selected","ImageButton____search","options","Filter","computeCssClass","key","LinkButton","LinkButton____selected","Object","entries","map","Filter__item","toggleFilter","Footer","count","Footer__label","Footer__counter","Info","message","blacklistedTargets","ACTION_KEYDOWN","ACTION_KEYUP","ACTION_RESET","keysReducer","useKeyboardShortcut","shortcutKeys","callback","Array","isArray","lowerCaseKeys","toLowerCase","initialKeyMapping","reduce","keys","currentKey","setKeys","handleKeydown","useCallback","keydownEvent","repeat","lowerCaseKey","tagName","handleKeyup","keyupEvent","useEffect","values","every","window","addEventListener","removeEventListener","TodoList","listContent","filteredItems","applyFilter","indexOf","search","createModeKeys","VALUE_SHIFT","VALUE_A","searchModeKeys","VALUE_S","noInputModeKeys","VALUE_ESCAPE","useTodoKeyboardShortcuts","TodoList__info","TodoList__content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.427db380.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActionList\":\"ActionList_ActionList__3dEHp\",\"ActionList__item\":\"ActionList_ActionList__item__XY4sH\",\"ImageButton\":\"ActionList_ImageButton__3cwvu\",\"ImageButton____add\":\"ActionList_ImageButton____add__1--gq\",\"ImageButton____search\":\"ActionList_ImageButton____search__3mHr9\",\"ImageButton____selected\":\"ActionList_ImageButton____selected__1AlI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__2tO4H\",\"TodoItem____done\":\"TodoItem_TodoItem____done__3kTYX\",\"TodoItem__content\":\"TodoItem_TodoItem__content__2Int-\",\"checkbox\":\"TodoItem_checkbox__2AcPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1UYAS\",\"Filter__item\":\"Filter_Filter__item__1djQd\",\"LinkButton\":\"Filter_LinkButton__1_ACI\",\"LinkButton____selected\":\"Filter_LinkButton____selected__1KPIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__2d68w\",\"Footer__label\":\"Footer_Footer__label__18h1D\",\"Footer__counter\":\"Footer_Footer__counter__1CIOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoList_TodoList__1SyrN\",\"TodoList__content\":\"TodoList_TodoList__content__2R-zK\",\"TodoList__info\":\"TodoList_TodoList__info__csMdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputBox\":\"InputBox_InputBox__1MwHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputBox\":\"SearchBox_InputBox__-4zKU\",\"SearchBox\":\"SearchBox_SearchBox__2UOIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3v_m8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"Info_Info__2N_it\"};","\r\nexport const FILTER_ALL = 'all';\r\nexport const FILTER_ACTIVE = 'active';\r\nexport const FILTER_DONE = 'done';\r\n\r\nexport function getOptions() {\r\n    return {\r\n        [FILTER_ALL]: FILTER_ALL,\r\n        [FILTER_ACTIVE]: FILTER_ACTIVE,\r\n        [FILTER_DONE]: FILTER_DONE\r\n    };\r\n}\r\n\r\nexport function applyFilter(items, filter) {\r\n    if (filter === FILTER_DONE) {\r\n        return items.filter(item => item.done === true);\r\n    }\r\n\r\n    if (filter === FILTER_ACTIVE) {\r\n        return items.filter(item => item.done === false);\r\n    }\r\n\r\n    return [...items];\r\n}\r\n\r\nexport function search(items, query) {\r\n    const queryString = query.toLowerCase();\r\n    if (query == null) {\r\n        return [...items];\r\n    }\r\n\r\n    return items.filter(item => item.text.toLowerCase().indexOf(queryString) !== -1);\r\n}\r\n","export const MODE_NONE = 'none';\r\nexport const MODE_SEARCH = 'search';\r\nexport const MODE_ADD = 'add';\r\n\r\nexport function getModes() {\r\n    return [MODE_NONE, MODE_SEARCH, MODE_ADD];\r\n}","import React, { useReducer } from \"react\";\r\nimport produce from \"immer\";\r\nimport PropTypes from 'prop-types';\r\nimport { getAll, createNew } from '../services/todo';\r\nimport { getOptions as getFilterOptions, FILTER_ALL } from \"../services/filter\";\r\nimport { MODE_ADD, getModes as getInputModes } from \"../services/mode\";\r\n\r\n\r\nconst TodoStateContext = React.createContext();\r\nconst TodoDispatchContext = React.createContext();\r\nconst filterOptions = getFilterOptions();\r\nconst inputModes = getInputModes();\r\n\r\nconst ADD_ITEM = 'add-item';\r\nconst SEARCH_ITEM = 'search-item';\r\nconst TOGGLE_ITEM = 'toggle-item';\r\nconst TOGGLE_FILTER = 'toggle-filter';\r\nconst TOGGLE_MODE = 'toggle-mode';\r\n\r\nfunction todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case ADD_ITEM: {\r\n            const itemText = action.value;\r\n            if (itemText == null) {\r\n                throw new Error(`${action.type}: item text not specified`);\r\n            }\r\n\r\n            const nextId = (state.items.length + 1).toString();\r\n            return produce(state, draft => {\r\n                draft.items.push(createNew({ id: nextId, text: itemText }));\r\n            });\r\n        }\r\n        case SEARCH_ITEM: {\r\n            const queryString = action.value;\r\n            if (queryString == null) {\r\n                throw new Error(`${action.type}: query not specified`);\r\n            }\r\n\r\n            return produce(state, draft => {\r\n                draft.query = queryString;\r\n            });\r\n        }\r\n        case TOGGLE_ITEM: {\r\n            const itemId = action.value;\r\n            if (itemId == null) {\r\n                throw new Error(`${action.type}: item id not specified`);\r\n            }\r\n\r\n            return produce(state, draft => {\r\n                const itemToToggle = draft.items.find(item => item.id === itemId);\r\n                if (itemToToggle == null) {\r\n                    throw new Error(`${action.type}: item with id ${itemId} not found`);\r\n                }\r\n                itemToToggle.done = !itemToToggle.done;\r\n            });\r\n        }\r\n        case TOGGLE_FILTER: {\r\n            const filterValue = action.value;\r\n            if (!(filterValue in filterOptions)) {\r\n                throw new Error(`${action.type}: filter ${filterValue} not found`);\r\n            }\r\n\r\n            return produce(state, draft => {\r\n                draft.filter = filterValue;\r\n            });\r\n        }\r\n        case TOGGLE_MODE: {\r\n            const mode = action.value;\r\n            if (!inputModes.includes(mode)) {\r\n                throw new Error(`${action.type}: input mode ${mode} not recognized`);\r\n            }\r\n\r\n            return produce(state, draft => {\r\n                if (draft.mode !== mode) {\r\n                    draft.mode = mode;\r\n                    draft.query = '';\r\n                    draft.filter = FILTER_ALL;\r\n                }\r\n            });\r\n        }\r\n        default: {\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction TodoProvider({ children }) {\r\n    const items = getAll();\r\n    const [state, dispatch] = useReducer(todoReducer, { items, mode: MODE_ADD, filter: FILTER_ALL, query: '' });\r\n\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nTodoProvider.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n}\r\n\r\nfunction useTodoState() {\r\n    const context = React.useContext(TodoStateContext);\r\n    if (context == null) {\r\n        throw new Error(`useTodoState must be within a TodoProvider`);\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nfunction useTodoDispatch() {\r\n    const context = React.useContext(TodoDispatchContext);\r\n    if (context == null) {\r\n        throw new Error(`useTodoDispatch must be within a TodoProvider`);\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nexport {\r\n    TodoProvider,\r\n    useTodoState,\r\n    useTodoDispatch,\r\n    ADD_ITEM,\r\n    SEARCH_ITEM,\r\n    TOGGLE_ITEM,\r\n    TOGGLE_FILTER,\r\n    TOGGLE_MODE\r\n};","\r\nexport function getAll() {\r\n    return [\r\n        {\r\n            id: '1',\r\n            text: 'Learn JavaScript',\r\n            done: true\r\n        },\r\n        {\r\n            id: '2',\r\n            text: 'Learn React',\r\n            done: false\r\n        },\r\n        {\r\n            id: '3',\r\n            text: 'Build a React app',\r\n            done: false\r\n        }\r\n    ];\r\n}\r\n\r\nexport function createNew({ id, text }) {\r\n    return { id, text, done: false };\r\n}","import PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { useTodoDispatch, TOGGLE_ITEM } from '../../../context/todo';\r\n\r\nimport styles from './TodoItem.module.scss';\r\n\r\n\r\nfunction TodoItem(props) {\r\n    const { data } = props;\r\n    const dispatch = useTodoDispatch();\r\n    const cssClass = cn(styles.TodoItem, { [styles.TodoItem____done]: data.done });\r\n\r\n    function handleChange() {\r\n        dispatch({ type: TOGGLE_ITEM, value: data.id });\r\n    }\r\n\r\n    return (\r\n        <li className={cssClass}>\r\n            <div className={styles.TodoItem__content}>\r\n                <label>\r\n                    <input type=\"checkbox\"\r\n                        className={styles.checkbox}\r\n                        checked={data.done}\r\n                        onChange={handleChange} />\r\n                    {data.text}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    data: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        text: PropTypes.string.isRequired,\r\n        done: PropTypes.bool.isRequired\r\n    })\r\n};\r\n\r\nexport default TodoItem;","import { KEY_RETURN } from 'keycode-js';\r\nimport { useState } from 'react';\r\nimport { useTodoDispatch, ADD_ITEM } from '../../../context/todo';\r\n\r\nimport styles from './InputBox.module.scss';\r\n\r\nexport default function InputBox() {\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useTodoDispatch();\r\n\r\n    function handleKeyUp(e) {\r\n        if (e.keyCode === KEY_RETURN) {\r\n            dispatch({ type: ADD_ITEM, value: value.trim() });\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input type=\"text\"\r\n            className={styles.InputBox}\r\n            placeholder=\"Add New\"\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n            onKeyUp={handleKeyUp} />\r\n    );\r\n}\r\n","import { useTodoDispatch, useTodoState, SEARCH_ITEM } from '../../../context/todo';\r\n\r\nimport styles from './SearchBox.module.scss';\r\n\r\n\r\nexport default function SearchBox() {\r\n    const { query } = useTodoState();\r\n    const dispatch = useTodoDispatch();\r\n\r\n    function handleChange(e) {\r\n        const value = e.target.value;\r\n        if (value != null) {\r\n            dispatch({ type: SEARCH_ITEM, value });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input type=\"text\"\r\n            className={styles.SearchBox}\r\n            placeholder=\"Search\"\r\n            value={query}\r\n            onChange={handleChange} />\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport InputBox from '../InputBox';\r\nimport SearchBox from '../SearchBox';\r\nimport { MODE_ADD, MODE_SEARCH, getModes } from '../../../services/mode';\r\n\r\nfunction InputToggle(props) {\r\n    const { mode, query } = props;\r\n    if (mode === MODE_ADD) {\r\n        return <InputBox />;\r\n    }\r\n\r\n    if (mode === MODE_SEARCH) {\r\n        return <SearchBox query={query} />;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nInputToggle.propTypes = {\r\n    mode: PropTypes.oneOf(getModes()).isRequired,\r\n    query: PropTypes.string\r\n}\r\n\r\nexport default InputToggle;","import styles from './Header.module.scss';\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n        <h1 className={styles.Header}>Things to do</h1>\r\n    );\r\n}","import PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { useTodoDispatch, TOGGLE_MODE } from '../../../context/todo';\r\nimport { getModes, MODE_ADD, MODE_SEARCH } from '../../../services/mode';\r\n\r\nimport styles from './ActionList.module.scss';\r\n\r\n\r\nfunction ActionList(props) {\r\n    const { mode } = props;\r\n    const dispatch = useTodoDispatch();\r\n    function handleClick(e) {\r\n        dispatch({ type: TOGGLE_MODE, value: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <ul className={styles.ActionList}>\r\n            <li className={styles.ActionList__item}>\r\n                <button type=\"button\" aria-label=\"Create Mode\"\r\n                    value={MODE_ADD}\r\n                    onClick={handleClick}\r\n                    className={cn(styles.ImageButton____add,\r\n                        { [styles.ImageButton____selected]: mode === MODE_ADD })}\r\n                    data-testid=\"action-add\">\r\n                </button>\r\n            </li>\r\n            <li className={styles.ActionList__item}>\r\n                <button type=\"button\" aria-label=\"Search Mode\"\r\n                    value={MODE_SEARCH}\r\n                    onClick={handleClick}\r\n                    className={cn(styles.ImageButton____search,\r\n                        { [styles.ImageButton____selected]: mode === MODE_SEARCH })}\r\n                    data-testid=\"action-search\">\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nActionList.propTypes = {\r\n    mode: PropTypes.oneOf(getModes())\r\n};\r\n\r\nexport default ActionList;","import cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { useTodoDispatch, TOGGLE_FILTER } from '../../../context/todo';\r\nimport { getOptions as getFilterOptions } from '../../../services/filter';\r\n\r\nimport styles from './Filter.module.scss';\r\n\r\n\r\nconst options = getFilterOptions();\r\n\r\nfunction Filter(props) {\r\n    const { filter } = props;\r\n    const dispatch = useTodoDispatch();\r\n\r\n    function computeCssClass(key) {\r\n        return cn(styles.LinkButton, { [styles.LinkButton____selected]: key === filter });\r\n    }\r\n\r\n    function toggleFilter(key) {\r\n        dispatch({ type: TOGGLE_FILTER, value: key })\r\n    }\r\n\r\n    return (\r\n        <ul className={styles.Filter}>\r\n            {Object.entries(options).map(([key, value]) => (\r\n                <li className={styles.Filter__item} key={key}>\r\n                    <button type=\"button\" className={computeCssClass(key)}\r\n                        onClick={() => toggleFilter(key)}>{value}</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport { getOptions as getFilterOptions } from '../../../services/filter';\r\nimport { getModes } from '../../../services/mode';\r\nimport ActionList from '../ActionList';\r\nimport Filter from '../Filter';\r\n\r\nimport styles from './Footer.module.scss';\r\n\r\n\r\nfunction Footer(props) {\r\n    const { count, filter, mode } = props;\r\n\r\n    return (\r\n        <div className={styles.Footer}>\r\n            <ActionList mode={mode} />\r\n            <label className={styles.Footer__label} data-testid='counter'>\r\n                <span className={styles.Footer__counter}>{count}</span>\r\n                {' items left'}\r\n            </label>\r\n            <Filter filter={filter} />\r\n        </div>\r\n    );\r\n}\r\n\r\nFooter.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    filter: PropTypes.oneOf(Object.values(getFilterOptions())).isRequired,\r\n    mode: PropTypes.oneOf(getModes()).isRequired\r\n};\r\n\r\nexport default Footer;","import PropTypes from 'prop-types';\r\nimport { MODE_NONE, getModes } from \"../../../services/mode\";\r\n\r\nimport styles from './Info.module.scss';\r\n\r\n\r\nfunction Info(props) {\r\n    const { mode } = props;\r\n    const INFO_SHORTCUT_KEYS = 'Press `Shift + S` to search and `Shift + A` to create a new item.';\r\n    const INFO_CANCEL_SHORTCUT_KEY = 'Press `Esc` to cancel.';\r\n\r\n    const message = mode === MODE_NONE ? INFO_SHORTCUT_KEYS : INFO_CANCEL_SHORTCUT_KEY;\r\n\r\n    return <p className={styles.Info}>{message}</p>;\r\n}\r\n\r\nInfo.propTypes = {\r\n    mode: PropTypes.oneOf(getModes())\r\n}\r\n\r\nexport default Info;","import produce from \"immer\";\r\nimport { useCallback, useEffect, useReducer } from \"react\";\r\n\r\n\r\nconst blacklistedTargets = [\"input\", \"textarea\"];\r\nconst ACTION_KEYDOWN = 'key-down';\r\nconst ACTION_KEYUP = 'key-up';\r\nconst ACTION_RESET = 'reset';\r\n\r\nfunction useKeyboardShortcut(shortcutKeys, callback) {\r\n    if (!Array.isArray(shortcutKeys)) {\r\n        throw new Error('The first parameter to `useKeyboardShortcut` must be an ordered array of `KeyboardEvent.key` strings.');\r\n    }\r\n\r\n    if (!shortcutKeys.length) {\r\n        throw new Error('The first parameter to `useKeyboardShortcut` must contain at least one `KeyboardEvent.key` string.');\r\n    }\r\n\r\n    if (!callback || typeof callback !== \"function\") {\r\n        throw new Error('The second parameter to `useKeyboardShortcut` must be a function that will be invoked when the keys are pressed.');\r\n    }\r\n\r\n    const lowerCaseKeys = shortcutKeys.map(key => key.toLowerCase());\r\n    const initialKeyMapping = lowerCaseKeys.reduce((keys, currentKey) => {\r\n        keys[currentKey] = false;\r\n        return keys;\r\n    }, {});\r\n\r\n    const [keys, setKeys] = useReducer(keysReducer, initialKeyMapping);\r\n\r\n    const handleKeydown = useCallback(keydownEvent => {\r\n        const { key, target, repeat } = keydownEvent;\r\n        const lowerCaseKey = key.toLowerCase();\r\n\r\n        if (repeat ||\r\n            blacklistedTargets.includes(target.tagName.toLowerCase()) ||\r\n            !lowerCaseKeys.includes(lowerCaseKey)) {\r\n            return;\r\n        }\r\n\r\n        if (!keys[lowerCaseKey]) {\r\n            setKeys({ type: ACTION_KEYDOWN, key: lowerCaseKey });\r\n        }\r\n    }, [keys, lowerCaseKeys]);\r\n\r\n    const handleKeyup = useCallback(keyupEvent => {\r\n        const { key, target } = keyupEvent;\r\n        const lowerCaseKey = key.toLowerCase();\r\n\r\n        if (blacklistedTargets.includes(target.tagName.toLowerCase()) ||\r\n            !lowerCaseKeys.includes(lowerCaseKey)) {\r\n            return;\r\n        }\r\n\r\n        if (keys[lowerCaseKey]) {\r\n            setKeys({ type: ACTION_KEYUP, key: lowerCaseKey });\r\n        }\r\n    }, [keys, lowerCaseKeys]);\r\n\r\n    useEffect(() => {\r\n        if (Object.values(keys).every(value => value)) {\r\n            callback(keys);\r\n            setKeys({ type: ACTION_RESET, data: initialKeyMapping });\r\n        }\r\n    }, [callback, keys, initialKeyMapping]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeydown, true);\r\n        return () => window.removeEventListener('keydown', handleKeydown, true);\r\n    }, [handleKeydown]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keyup', handleKeyup, true);\r\n        return () => window.removeEventListener('keyup', handleKeyup, true);\r\n    }, [handleKeyup]);\r\n\r\n    return null;\r\n}\r\n\r\nfunction keysReducer(state, action) {\r\n    switch (action.type) {\r\n        case ACTION_KEYDOWN: {\r\n            return produce(state, draft => {\r\n                draft[action.key] = true;\r\n            });\r\n        }\r\n        case ACTION_KEYUP: {\r\n            return produce(state, draft => {\r\n                draft[action.key] = false;\r\n            });\r\n        }\r\n        case ACTION_RESET: {\r\n            return { ...action.data };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default useKeyboardShortcut;","\r\nimport { useTodoState } from '../../context/todo';\r\nimport { applyFilter, search } from '../../services/filter';\r\nimport TodoItem from './TodoItem';\r\nimport InputToggle from './InputToggle';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Info from './Info';\r\nimport useTodoKeyboardShortcuts from './useTodoKeyboardShortcuts';\r\n\r\nimport styles from './TodoList.module.scss';\r\n\r\n\r\nexport default function TodoList() {\r\n    const { items, mode, filter, query } = useTodoState();\r\n    const filteredItems = applyFilter(search(items, query), filter);\r\n    const count = filteredItems.length;\r\n\r\n    useTodoKeyboardShortcuts();\r\n\r\n    let listContent;\r\n    if (filteredItems.length === 0) {\r\n        listContent = <p className={styles.TodoList__info}>There are no items.</p>;\r\n    } else {\r\n        listContent = (\r\n            <ul className={styles.TodoList__content} data-testid=\"todo-list\">\r\n                {filteredItems.map(item => <TodoItem key={item.id} data={item} />)}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section className={styles.TodoList}>\r\n            <>\r\n                <Header />\r\n                <InputToggle mode={mode} query={query} />\r\n\r\n                {listContent}\r\n\r\n                <Footer count={count} filter={filter} mode={mode} />\r\n            </>\r\n            <Info mode={mode} />\r\n        </section>\r\n    );\r\n}\r\n","import { VALUE_A, VALUE_S, VALUE_ESCAPE, VALUE_SHIFT } from 'keycode-js';\r\nimport { useTodoDispatch, TOGGLE_MODE } from \"../../context/todo\";\r\nimport { MODE_ADD, MODE_SEARCH, MODE_NONE } from '../../services/mode';\r\nimport useKeyboardShortcut from \"../../hooks/useKeyboardShortcut\";\r\n\r\n\r\nexport default function useTodoKeyboardShortcuts() {\r\n    const dispatch = useTodoDispatch();\r\n    const createModeKeys = [VALUE_SHIFT, VALUE_A];\r\n    const searchModeKeys = [VALUE_SHIFT, VALUE_S];\r\n    const noInputModeKeys = [VALUE_ESCAPE];\r\n\r\n    useKeyboardShortcut(createModeKeys, () => dispatch({ type: TOGGLE_MODE, value: MODE_ADD }));\r\n    useKeyboardShortcut(searchModeKeys, () => dispatch({ type: TOGGLE_MODE, value: MODE_SEARCH }));\r\n    useKeyboardShortcut(noInputModeKeys, () => dispatch({ type: TOGGLE_MODE, value: MODE_NONE }));\r\n}","import { TodoProvider } from '../../context/todo';\r\nimport TodoList from '../TodoList';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <TodoProvider>\r\n      <TodoList />\r\n    </TodoProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}