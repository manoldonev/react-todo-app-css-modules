{"version":3,"sources":["components/TodoList/ActionList/ActionList.module.scss","components/TodoList/TodoItem/TodoItem.module.scss","components/TodoList/Filter/Filter.module.scss","components/TodoList/Footer/Footer.module.scss","components/TodoList/TodoList.module.scss","components/TodoList/InputBox/InputBox.module.scss","components/TodoList/SearchBox/SearchBox.module.scss","components/TodoList/Header/Header.module.scss","components/TodoList/Info/Info.module.scss","services/filter.js","services/mode.js","context/todo.js","services/todo.js","components/TodoList/TodoItem/TodoItem.js","components/TodoList/InputBox/InputBox.js","components/TodoList/SearchBox/SearchBox.js","components/TodoList/InputToggle/InputToggle.js","components/TodoList/Header/Header.js","components/TodoList/ActionList/ActionList.js","components/TodoList/Filter/Filter.js","components/TodoList/Footer/Footer.js","components/TodoList/Info/Info.js","hooks/useKeyboardShortcut.js","components/TodoList/TodoList.js","components/TodoList/useTodoKeyboardShortcuts.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","filterOptions","all","active","done","inputModes","none","search","add","TodoStateContext","React","createContext","TodoDispatchContext","actionTypes","todoReducer","state","action","type","itemText","value","Error","nextId","items","length","toString","produce","draft","push","id","text","query","itemId","itemToToggle","find","item","filterValue","filter","inputMode","mode","TodoProvider","children","reducer","useReducer","dispatch","Provider","useTodoState","context","useContext","useTodoDispatch","TodoItem","props","data","cssClass","cn","styles","TodoItem____done","className","TodoItem__content","checkbox","checked","onChange","InputBox","useState","setValue","placeholder","e","target","onKeyUp","keyCode","KEY_RETURN","trim","SearchBox","InputToggle","Header","ActionList","handleClick","ActionList__item","onClick","ImageButton____add","ImageButton____selected","ImageButton____search","Filter","computeCssClass","key","LinkButton","LinkButton____selected","Object","entries","map","Filter__item","toggleFilter","Footer","count","Footer__counter","Footer__content","Info","message","blacklistedTargets","ACTION_KEYDOWN","ACTION_KEYUP","ACTION_RESET","keysReducer","useKeyboardShortcut","shortcutKeys","callback","Array","isArray","lowerCaseKeys","toLowerCase","initialKeyMapping","reduce","keys","currentKey","setKeys","handleKeydown","useCallback","keydownEvent","repeat","lowerCaseKey","includes","tagName","handleKeyup","keyupEvent","useEffect","values","every","window","addEventListener","removeEventListener","TodoList","listContent","filteredItems","applyFilter","queryString","createModeKeys","VALUE_SHIFT","VALUE_A","searchModeKeys","VALUE_S","noInputModeKeys","VALUE_ESCAPE","useTodoKeyboardShortcuts","TodoList__info","TodoList__content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ea19c5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActionList\":\"ActionList_ActionList__1FRvH\",\"ActionList__item\":\"ActionList_ActionList__item__2mjQb\",\"ImageButton\":\"ActionList_ImageButton__LEdPW\",\"ImageButton____add\":\"ActionList_ImageButton____add__2lAqN\",\"ImageButton____search\":\"ActionList_ImageButton____search__2qHKG\",\"ImageButton____selected\":\"ActionList_ImageButton____selected__1Y1aI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__Qnlg8\",\"TodoItem____done\":\"TodoItem_TodoItem____done__1k6V5\",\"TodoItem__content\":\"TodoItem_TodoItem__content__3fdje\",\"checkbox\":\"TodoItem_checkbox__3qgxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__3fpZt\",\"Filter__item\":\"Filter_Filter__item__LVm3l\",\"LinkButton\":\"Filter_LinkButton__X_4jP\",\"LinkButton____selected\":\"Filter_LinkButton____selected__4fAqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__3WXMg\",\"Footer__counter\":\"Footer_Footer__counter__Of6Ic\",\"Footer__content\":\"Footer_Footer__content__3dneO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoList_TodoList__3hnL-\",\"TodoList__content\":\"TodoList_TodoList__content__3Kbs5\",\"TodoList__info\":\"TodoList_TodoList__info__1xEN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputBox\":\"InputBox_InputBox__B-Ft7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputBox\":\"SearchBox_InputBox__37P4e\",\"SearchBox\":\"SearchBox_SearchBox__3Dqim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__39x9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"Info_Info__3ha2y\"};","\nexport const filterOptions = {\n    all: 'all',\n    active: 'active',\n    done: 'done'\n};\n\nexport function filter(items, filter) {\n    if (filter === filterOptions.done) {\n        return items.filter(item => item.done);\n    }\n\n    if (filter === filterOptions.active) {\n        return items.filter(item => !item.done);\n    }\n\n    return [...items];\n}\n\nexport function search(items, query) {\n    const queryString = query.toLowerCase();\n    if (query == null) {\n        return [...items];\n    }\n\n    return items.filter(item => item.text.toLowerCase().includes(queryString));\n}\n","\nexport const inputModes = {\n    none: 'none',\n    search: 'search',\n    add: 'add'\n};","import React, { useReducer } from \"react\";\nimport produce from \"immer\";\nimport PropTypes from 'prop-types';\nimport { getAll, createNew } from '../services/todo';\nimport { filterOptions } from \"../services/filter\";\nimport { inputModes } from \"../services/mode\";\n\n\nconst TodoStateContext = React.createContext();\nconst TodoDispatchContext = React.createContext();\n\nconst actionTypes = {\n    addItem: 'ADD_ITEM',\n    searchItem: 'SEARCH_ITEM',\n    toggleItem: 'TOGGLE_ITEM',\n    toggleFilter: 'TOGGLE_FILTER',\n    toggleMode: 'TOGGLE_MODE'\n};\n\nfunction todoReducer(state, action) {\n    switch (action.type) {\n        case actionTypes.addItem: {\n            const itemText = action.value;\n            if (itemText == null) {\n                throw new Error(`${action.type}: item text not specified`);\n            }\n\n            const nextId = (state.items.length + 1).toString();\n            return produce(state, draft => {\n                draft.items.push(createNew({ id: nextId, text: itemText }));\n            });\n        }\n        case actionTypes.searchItem: {\n            return produce(state, draft => {\n                draft.query = action.value;\n            });\n        }\n        case actionTypes.toggleItem: {\n            const itemId = action.value;\n            if (itemId == null) {\n                throw new Error(`${action.type}: item id not specified`);\n            }\n\n            return produce(state, draft => {\n                const itemToToggle = draft.items.find(item => item.id === itemId);\n                if (itemToToggle == null) {\n                    throw new Error(`${action.type}: item with id ${itemId} not found`);\n                }\n                itemToToggle.done = !itemToToggle.done;\n            });\n        }\n        case actionTypes.toggleFilter: {\n            const filterValue = action.value;\n            if (!(filterValue in filterOptions)) {\n                throw new Error(`${action.type}: filter ${filterValue} not found`);\n            }\n\n            return produce(state, draft => {\n                draft.filter = filterValue;\n            });\n        }\n        case actionTypes.toggleMode: {\n            const inputMode = action.value;\n            if (!(inputMode in inputModes)) {\n                throw new Error(`${action.type}: input mode ${inputMode} not recognized`);\n            }\n\n            return produce(state, draft => {\n                if (draft.mode !== inputMode) {\n                    draft.mode = inputMode;\n                    draft.query = '';\n                    draft.filter = filterOptions.all;\n                }\n            });\n        }\n        default: {\n            throw new Error(`Unhandled action type: ${action.type}`);\n        }\n\n    }\n}\n\nfunction TodoProvider({ children, reducer = todoReducer } = {}) {\n    const items = getAll();\n    const [state, dispatch] = useReducer(reducer, { items, mode: inputModes.add, filter: filterOptions.all, query: '' });\n\n    return (\n        <TodoStateContext.Provider value={state}>\n            <TodoDispatchContext.Provider value={dispatch}>\n                {children}\n            </TodoDispatchContext.Provider>\n        </TodoStateContext.Provider>\n    );\n}\n\nTodoProvider.propTypes = {\n    children: PropTypes.element.isRequired,\n    reducer: PropTypes.func\n}\n\nfunction useTodoState() {\n    const context = React.useContext(TodoStateContext);\n    if (context == null) {\n        throw new Error(`useTodoState must be within a TodoProvider`);\n    }\n\n    return context;\n}\n\nfunction useTodoDispatch() {\n    const context = React.useContext(TodoDispatchContext);\n    if (context == null) {\n        throw new Error(`useTodoDispatch must be within a TodoProvider`);\n    }\n\n    return context;\n}\n\nexport {\n    TodoProvider,\n    useTodoState,\n    useTodoDispatch,\n    todoReducer,\n    actionTypes\n};","\nexport function getAll() {\n    return [\n        {\n            id: '1',\n            text: 'Learn JavaScript',\n            done: true\n        },\n        {\n            id: '2',\n            text: 'Learn React',\n            done: false\n        },\n        {\n            id: '3',\n            text: 'Build a React app',\n            done: false\n        }\n    ];\n}\n\nexport function createNew({ id, text }) {\n    return { id, text, done: false };\n}\n","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useTodoDispatch, actionTypes } from '../../../context/todo';\n\nimport styles from './TodoItem.module.scss';\n\n\nfunction TodoItem(props) {\n    const { data } = props;\n    const dispatch = useTodoDispatch();\n    const cssClass = cn(styles.TodoItem, { [styles.TodoItem____done]: data.done });\n\n    function handleChange() {\n        dispatch({ type: actionTypes.toggleItem, value: data.id });\n    }\n\n    return (\n        <li className={cssClass}>\n            <div className={styles.TodoItem__content}>\n                <label>\n                    <input type=\"checkbox\"\n                        className={styles.checkbox}\n                        checked={data.done}\n                        onChange={handleChange} />\n                    {data.text}\n                </label>\n            </div>\n        </li>\n    );\n}\n\nTodoItem.propTypes = {\n    data: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired,\n        done: PropTypes.bool.isRequired\n    })\n};\n\nexport default TodoItem;","import { KEY_RETURN } from 'keycode-js';\nimport { useState } from 'react';\nimport { useTodoDispatch, actionTypes } from '../../../context/todo';\n\nimport styles from './InputBox.module.scss';\n\nexport default function InputBox() {\n    const [value, setValue] = useState('');\n    const dispatch = useTodoDispatch();\n\n    function handleKeyUp(e) {\n        if (e.keyCode === KEY_RETURN) {\n            dispatch({ type: actionTypes.addItem, value: value.trim() });\n            setValue('');\n        }\n    }\n\n    return (\n        <input type=\"text\"\n            className={styles.InputBox}\n            placeholder=\"Add New\"\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            onKeyUp={handleKeyUp} />\n    );\n}\n","import { useTodoDispatch, useTodoState, actionTypes } from '../../../context/todo';\n\nimport styles from './SearchBox.module.scss';\n\n\nexport default function SearchBox() {\n    const { query } = useTodoState();\n    const dispatch = useTodoDispatch();\n\n    function handleChange(e) {\n        const {value} = e.target;\n        dispatch({ type: actionTypes.searchItem, value });\n    }\n\n    return (\n        <input type=\"text\"\n            className={styles.SearchBox}\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleChange} />\n    );\n}\n","import PropTypes from 'prop-types';\nimport InputBox from '../InputBox';\nimport SearchBox from '../SearchBox';\nimport { inputModes } from '../../../services/mode';\n\nfunction InputToggle(props) {\n    const { mode, query } = props;\n    if (mode === inputModes.add) {\n        return <InputBox />;\n    }\n\n    if (mode === inputModes.search) {\n        return <SearchBox query={query} />;\n    }\n\n    return null;\n}\n\nInputToggle.propTypes = {\n    mode: PropTypes.oneOf(Object.values(inputModes)).isRequired,\n    query: PropTypes.string\n}\n\nexport default InputToggle;","import styles from './Header.module.scss';\n\n\nexport default function Header() {\n    return (\n        <h1 className={styles.Header}>Things to do</h1>\n    );\n}","import PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useTodoDispatch, actionTypes } from '../../../context/todo';\nimport { inputModes } from '../../../services/mode';\n\nimport styles from './ActionList.module.scss';\n\n\nfunction ActionList(props) {\n    const { mode } = props;\n    const dispatch = useTodoDispatch();\n    function handleClick(e) {\n        dispatch({ type: actionTypes.toggleMode, value: e.target.value });\n    }\n\n    return (\n        <ul className={styles.ActionList}>\n            <li className={styles.ActionList__item}>\n                <button type=\"button\" aria-label=\"Create Mode\"\n                    value={inputModes.add}\n                    onClick={handleClick}\n                    className={cn(styles.ImageButton____add,\n                        { [styles.ImageButton____selected]: mode === inputModes.add })}\n                    data-testid=\"action-add\">\n                </button>\n            </li>\n            <li className={styles.ActionList__item}>\n                <button type=\"button\" aria-label=\"Search Mode\"\n                    value={inputModes.search}\n                    onClick={handleClick}\n                    className={cn(styles.ImageButton____search,\n                        { [styles.ImageButton____selected]: mode === inputModes.search })}\n                    data-testid=\"action-search\">\n                </button>\n            </li>\n        </ul>\n    );\n}\n\nActionList.propTypes = {\n    mode: PropTypes.oneOf(Object.values(inputModes)).isRequired\n};\n\nexport default ActionList;","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useTodoDispatch, actionTypes } from '../../../context/todo';\nimport { filterOptions } from '../../../services/filter';\n\nimport styles from './Filter.module.scss';\n\n\nfunction Filter(props) {\n    const { filter } = props;\n    const dispatch = useTodoDispatch();\n\n    function computeCssClass(key) {\n        return cn(styles.LinkButton, { [styles.LinkButton____selected]: key === filter });\n    }\n\n    function toggleFilter(key) {\n        dispatch({ type: actionTypes.toggleFilter, value: key })\n    }\n\n    return (\n        <ul className={styles.Filter}>\n            {Object.entries(filterOptions).map(([key, value]) => (\n                <li className={styles.Filter__item} key={key}>\n                    <button type=\"button\" className={computeCssClass(key)}\n                        onClick={() => toggleFilter(key)}>{value}</button>\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired\n}\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport { filterOptions } from '../../../services/filter';\nimport { inputModes } from '../../../services/mode';\nimport ActionList from '../ActionList';\nimport Filter from '../Filter';\n\nimport styles from './Footer.module.scss';\n\n\nfunction Footer(props) {\n    const { count, filter, mode } = props;\n\n    return (\n        <div className={styles.Footer}>\n            <ActionList mode={mode} />\n            <span className={styles.Footer__counter} data-testid=\"counter\">\n                <span className={styles.Footer__content}>{count}</span>\n                {' items left'}\n            </span>\n            <Filter filter={filter} />\n        </div>\n    );\n}\n\nFooter.propTypes = {\n    count: PropTypes.number.isRequired,\n    filter: PropTypes.oneOf(Object.values(filterOptions)).isRequired,\n    mode: PropTypes.oneOf(Object.values(inputModes)).isRequired\n};\n\nexport default Footer;","import PropTypes from 'prop-types';\nimport { inputModes } from \"../../../services/mode\";\n\nimport styles from './Info.module.scss';\n\nconst INFO_SHORTCUT_KEYS = 'Press `Shift + S` to search and `Shift + A` to create a new item.';\nconst INFO_CANCEL_SHORTCUT_KEY = 'Press `Esc` to cancel.';\n\nfunction Info(props) {\n    const { mode } = props;\n    const message = mode === inputModes.none ? INFO_SHORTCUT_KEYS : INFO_CANCEL_SHORTCUT_KEY;\n\n    return <p className={styles.Info}>{message}</p>;\n}\n\nInfo.propTypes = {\n    mode: PropTypes.oneOf(Object.values(inputModes)).isRequired\n}\n\nexport default Info;","import produce from \"immer\";\nimport { useCallback, useEffect, useReducer } from \"react\";\n\n\nconst blacklistedTargets = [\"input\", \"textarea\"];\nconst ACTION_KEYDOWN = 'key-down';\nconst ACTION_KEYUP = 'key-up';\nconst ACTION_RESET = 'reset';\n\nfunction useKeyboardShortcut(shortcutKeys, callback) {\n    if (!Array.isArray(shortcutKeys)) {\n        throw new Error('The first parameter to `useKeyboardShortcut` must be an ordered array of `KeyboardEvent.key` strings.');\n    }\n\n    if (!shortcutKeys.length) {\n        throw new Error('The first parameter to `useKeyboardShortcut` must contain at least one `KeyboardEvent.key` string.');\n    }\n\n    if (!callback || typeof callback !== \"function\") {\n        throw new Error('The second parameter to `useKeyboardShortcut` must be a function that will be invoked when the keys are pressed.');\n    }\n\n    const lowerCaseKeys = shortcutKeys.map(key => key.toLowerCase());\n    const initialKeyMapping = lowerCaseKeys.reduce((keys, currentKey) => {\n        keys[currentKey] = false;\n        return keys;\n    }, {});\n\n    const [keys, setKeys] = useReducer(keysReducer, initialKeyMapping);\n\n    const handleKeydown = useCallback(keydownEvent => {\n        const { key, target, repeat } = keydownEvent;\n        const lowerCaseKey = key.toLowerCase();\n\n        if (repeat ||\n            blacklistedTargets.includes(target.tagName.toLowerCase()) ||\n            !lowerCaseKeys.includes(lowerCaseKey)) {\n            return;\n        }\n\n        if (!keys[lowerCaseKey]) {\n            setKeys({ type: ACTION_KEYDOWN, key: lowerCaseKey });\n        }\n    }, [keys, lowerCaseKeys]);\n\n    const handleKeyup = useCallback(keyupEvent => {\n        const { key, target } = keyupEvent;\n        const lowerCaseKey = key.toLowerCase();\n\n        if (blacklistedTargets.includes(target.tagName.toLowerCase()) ||\n            !lowerCaseKeys.includes(lowerCaseKey)) {\n            return;\n        }\n\n        if (keys[lowerCaseKey]) {\n            setKeys({ type: ACTION_KEYUP, key: lowerCaseKey });\n        }\n    }, [keys, lowerCaseKeys]);\n\n    useEffect(() => {\n        if (Object.values(keys).every(value => value)) {\n            callback(keys);\n            setKeys({ type: ACTION_RESET, data: initialKeyMapping });\n        }\n    }, [callback, keys, initialKeyMapping]);\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeydown, true);\n        return () => window.removeEventListener('keydown', handleKeydown, true);\n    }, [handleKeydown]);\n\n    useEffect(() => {\n        window.addEventListener('keyup', handleKeyup, true);\n        return () => window.removeEventListener('keyup', handleKeyup, true);\n    }, [handleKeyup]);\n\n    return null;\n}\n\nfunction keysReducer(state, action) {\n    switch (action.type) {\n        case ACTION_KEYDOWN: {\n            return produce(state, draft => {\n                draft[action.key] = true;\n            });\n        }\n        case ACTION_KEYUP: {\n            return produce(state, draft => {\n                draft[action.key] = false;\n            });\n        }\n        case ACTION_RESET: {\n            return { ...action.data };\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default useKeyboardShortcut;","\nimport { useTodoState } from '../../context/todo';\nimport { filter as applyFilter, search } from '../../services/filter';\nimport TodoItem from './TodoItem';\nimport InputToggle from './InputToggle';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Info from './Info';\nimport useTodoKeyboardShortcuts from './useTodoKeyboardShortcuts';\n\nimport styles from './TodoList.module.scss';\n\n\nexport default function TodoList() {\n    const { items, mode, filter, query } = useTodoState();\n    const filteredItems = applyFilter(search(items, query), filter);\n    const count = filteredItems.length;\n\n    useTodoKeyboardShortcuts();\n\n    let listContent;\n    if (filteredItems.length === 0) {\n        listContent = <p className={styles.TodoList__info}>There are no items.</p>;\n    } else {\n        listContent = (\n            <ul className={styles.TodoList__content} data-testid=\"todo-list\">\n                {filteredItems.map(item => <TodoItem key={item.id} data={item} />)}\n            </ul>\n        );\n    }\n\n    return (\n        <section className={styles.TodoList}>\n            <>\n                <Header />\n                <InputToggle mode={mode} query={query} />\n\n                {listContent}\n\n                <Footer count={count} filter={filter} mode={mode} />\n            </>\n            <Info mode={mode} />\n        </section>\n    );\n}\n","import { VALUE_A, VALUE_S, VALUE_ESCAPE, VALUE_SHIFT } from 'keycode-js';\nimport { useTodoDispatch, actionTypes } from \"../../context/todo\";\nimport { inputModes } from '../../services/mode';\nimport useKeyboardShortcut from \"../../hooks/useKeyboardShortcut\";\n\n\nexport default function useTodoKeyboardShortcuts() {\n    const dispatch = useTodoDispatch();\n    const createModeKeys = [VALUE_SHIFT, VALUE_A];\n    const searchModeKeys = [VALUE_SHIFT, VALUE_S];\n    const noInputModeKeys = [VALUE_ESCAPE];\n\n    useKeyboardShortcut(createModeKeys, () => dispatch({ type: actionTypes.toggleMode, value: inputModes.add }));\n    useKeyboardShortcut(searchModeKeys, () => dispatch({ type: actionTypes.toggleMode, value: inputModes.search }));\n    useKeyboardShortcut(noInputModeKeys, () => dispatch({ type: actionTypes.toggleMode, value: inputModes.none }));\n}","import { TodoProvider } from '../../context/todo';\nimport TodoList from '../TodoList';\n\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <TodoList />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}